# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PlayerMatchStats(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, season_id: str=None, player_id: int=None, game_id: str=None, game_date: date=None, match_up: str=None, wl: str=None, min: float=None, fgm: float=None, fga: float=None, fg_pct: float=None, fg3m: float=None, fg3a: float=None, fg3_pct: float=None, ftm: float=None, fta: float=None, ft_pct: float=None, oreb: float=None, dreb: float=None, reb: float=None, ast: float=None, stl: float=None, blk: float=None, tov: float=None, pf: float=None, pts: float=None, plus_minus: float=None, video_available: float=None):  # noqa: E501
        """PlayerMatchStats - a model defined in Swagger

        :param season_id: The season_id of this PlayerMatchStats.  # noqa: E501
        :type season_id: str
        :param player_id: The player_id of this PlayerMatchStats.  # noqa: E501
        :type player_id: int
        :param game_id: The game_id of this PlayerMatchStats.  # noqa: E501
        :type game_id: str
        :param game_date: The game_date of this PlayerMatchStats.  # noqa: E501
        :type game_date: date
        :param match_up: The match_up of this PlayerMatchStats.  # noqa: E501
        :type match_up: str
        :param wl: The wl of this PlayerMatchStats.  # noqa: E501
        :type wl: str
        :param min: The min of this PlayerMatchStats.  # noqa: E501
        :type min: float
        :param fgm: The fgm of this PlayerMatchStats.  # noqa: E501
        :type fgm: float
        :param fga: The fga of this PlayerMatchStats.  # noqa: E501
        :type fga: float
        :param fg_pct: The fg_pct of this PlayerMatchStats.  # noqa: E501
        :type fg_pct: float
        :param fg3m: The fg3m of this PlayerMatchStats.  # noqa: E501
        :type fg3m: float
        :param fg3a: The fg3a of this PlayerMatchStats.  # noqa: E501
        :type fg3a: float
        :param fg3_pct: The fg3_pct of this PlayerMatchStats.  # noqa: E501
        :type fg3_pct: float
        :param ftm: The ftm of this PlayerMatchStats.  # noqa: E501
        :type ftm: float
        :param fta: The fta of this PlayerMatchStats.  # noqa: E501
        :type fta: float
        :param ft_pct: The ft_pct of this PlayerMatchStats.  # noqa: E501
        :type ft_pct: float
        :param oreb: The oreb of this PlayerMatchStats.  # noqa: E501
        :type oreb: float
        :param dreb: The dreb of this PlayerMatchStats.  # noqa: E501
        :type dreb: float
        :param reb: The reb of this PlayerMatchStats.  # noqa: E501
        :type reb: float
        :param ast: The ast of this PlayerMatchStats.  # noqa: E501
        :type ast: float
        :param stl: The stl of this PlayerMatchStats.  # noqa: E501
        :type stl: float
        :param blk: The blk of this PlayerMatchStats.  # noqa: E501
        :type blk: float
        :param tov: The tov of this PlayerMatchStats.  # noqa: E501
        :type tov: float
        :param pf: The pf of this PlayerMatchStats.  # noqa: E501
        :type pf: float
        :param pts: The pts of this PlayerMatchStats.  # noqa: E501
        :type pts: float
        :param plus_minus: The plus_minus of this PlayerMatchStats.  # noqa: E501
        :type plus_minus: float
        :param video_available: The video_available of this PlayerMatchStats.  # noqa: E501
        :type video_available: float
        """
        self.swagger_types = {
            'season_id': str,
            'player_id': int,
            'game_id': str,
            'game_date': date,
            'match_up': str,
            'wl': str,
            'min': float,
            'fgm': float,
            'fga': float,
            'fg_pct': float,
            'fg3m': float,
            'fg3a': float,
            'fg3_pct': float,
            'ftm': float,
            'fta': float,
            'ft_pct': float,
            'oreb': float,
            'dreb': float,
            'reb': float,
            'ast': float,
            'stl': float,
            'blk': float,
            'tov': float,
            'pf': float,
            'pts': float,
            'plus_minus': float,
            'video_available': float
        }

        self.attribute_map = {
            'season_id': 'season_id',
            'player_id': 'player_id',
            'game_id': 'game_id',
            'game_date': 'game_date',
            'match_up': 'match_up',
            'wl': 'wl',
            'min': 'min',
            'fgm': 'fgm',
            'fga': 'fga',
            'fg_pct': 'fg_pct',
            'fg3m': 'fg3m',
            'fg3a': 'fg3a',
            'fg3_pct': 'fg3_pct',
            'ftm': 'ftm',
            'fta': 'fta',
            'ft_pct': 'ft_pct',
            'oreb': 'oreb',
            'dreb': 'dreb',
            'reb': 'reb',
            'ast': 'ast',
            'stl': 'stl',
            'blk': 'blk',
            'tov': 'tov',
            'pf': 'pf',
            'pts': 'pts',
            'plus_minus': 'plus_minus',
            'video_available': 'video_available'
        }
        self._season_id = season_id
        self._player_id = player_id
        self._game_id = game_id
        self._game_date = game_date
        self._match_up = match_up
        self._wl = wl
        self._min = min
        self._fgm = fgm
        self._fga = fga
        self._fg_pct = fg_pct
        self._fg3m = fg3m
        self._fg3a = fg3a
        self._fg3_pct = fg3_pct
        self._ftm = ftm
        self._fta = fta
        self._ft_pct = ft_pct
        self._oreb = oreb
        self._dreb = dreb
        self._reb = reb
        self._ast = ast
        self._stl = stl
        self._blk = blk
        self._tov = tov
        self._pf = pf
        self._pts = pts
        self._plus_minus = plus_minus
        self._video_available = video_available

    @classmethod
    def from_dict(cls, dikt) -> 'PlayerMatchStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlayerMatchStats of this PlayerMatchStats.  # noqa: E501
        :rtype: PlayerMatchStats
        """
        return util.deserialize_model(dikt, cls)

    @property
    def season_id(self) -> str:
        """Gets the season_id of this PlayerMatchStats.


        :return: The season_id of this PlayerMatchStats.
        :rtype: str
        """
        return self._season_id

    @season_id.setter
    def season_id(self, season_id: str):
        """Sets the season_id of this PlayerMatchStats.


        :param season_id: The season_id of this PlayerMatchStats.
        :type season_id: str
        """

        self._season_id = season_id

    @property
    def player_id(self) -> int:
        """Gets the player_id of this PlayerMatchStats.


        :return: The player_id of this PlayerMatchStats.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id: int):
        """Sets the player_id of this PlayerMatchStats.


        :param player_id: The player_id of this PlayerMatchStats.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def game_id(self) -> str:
        """Gets the game_id of this PlayerMatchStats.


        :return: The game_id of this PlayerMatchStats.
        :rtype: str
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id: str):
        """Sets the game_id of this PlayerMatchStats.


        :param game_id: The game_id of this PlayerMatchStats.
        :type game_id: str
        """

        self._game_id = game_id

    @property
    def game_date(self) -> date:
        """Gets the game_date of this PlayerMatchStats.


        :return: The game_date of this PlayerMatchStats.
        :rtype: date
        """
        return self._game_date

    @game_date.setter
    def game_date(self, game_date: date):
        """Sets the game_date of this PlayerMatchStats.


        :param game_date: The game_date of this PlayerMatchStats.
        :type game_date: date
        """

        self._game_date = game_date

    @property
    def match_up(self) -> str:
        """Gets the match_up of this PlayerMatchStats.


        :return: The match_up of this PlayerMatchStats.
        :rtype: str
        """
        return self._match_up

    @match_up.setter
    def match_up(self, match_up: str):
        """Sets the match_up of this PlayerMatchStats.


        :param match_up: The match_up of this PlayerMatchStats.
        :type match_up: str
        """

        self._match_up = match_up

    @property
    def wl(self) -> str:
        """Gets the wl of this PlayerMatchStats.


        :return: The wl of this PlayerMatchStats.
        :rtype: str
        """
        return self._wl

    @wl.setter
    def wl(self, wl: str):
        """Sets the wl of this PlayerMatchStats.


        :param wl: The wl of this PlayerMatchStats.
        :type wl: str
        """

        self._wl = wl

    @property
    def min(self) -> float:
        """Gets the min of this PlayerMatchStats.


        :return: The min of this PlayerMatchStats.
        :rtype: float
        """
        return self._min

    @min.setter
    def min(self, min: float):
        """Sets the min of this PlayerMatchStats.


        :param min: The min of this PlayerMatchStats.
        :type min: float
        """

        self._min = min

    @property
    def fgm(self) -> float:
        """Gets the fgm of this PlayerMatchStats.


        :return: The fgm of this PlayerMatchStats.
        :rtype: float
        """
        return self._fgm

    @fgm.setter
    def fgm(self, fgm: float):
        """Sets the fgm of this PlayerMatchStats.


        :param fgm: The fgm of this PlayerMatchStats.
        :type fgm: float
        """

        self._fgm = fgm

    @property
    def fga(self) -> float:
        """Gets the fga of this PlayerMatchStats.


        :return: The fga of this PlayerMatchStats.
        :rtype: float
        """
        return self._fga

    @fga.setter
    def fga(self, fga: float):
        """Sets the fga of this PlayerMatchStats.


        :param fga: The fga of this PlayerMatchStats.
        :type fga: float
        """

        self._fga = fga

    @property
    def fg_pct(self) -> float:
        """Gets the fg_pct of this PlayerMatchStats.


        :return: The fg_pct of this PlayerMatchStats.
        :rtype: float
        """
        return self._fg_pct

    @fg_pct.setter
    def fg_pct(self, fg_pct: float):
        """Sets the fg_pct of this PlayerMatchStats.


        :param fg_pct: The fg_pct of this PlayerMatchStats.
        :type fg_pct: float
        """

        self._fg_pct = fg_pct

    @property
    def fg3m(self) -> float:
        """Gets the fg3m of this PlayerMatchStats.


        :return: The fg3m of this PlayerMatchStats.
        :rtype: float
        """
        return self._fg3m

    @fg3m.setter
    def fg3m(self, fg3m: float):
        """Sets the fg3m of this PlayerMatchStats.


        :param fg3m: The fg3m of this PlayerMatchStats.
        :type fg3m: float
        """

        self._fg3m = fg3m

    @property
    def fg3a(self) -> float:
        """Gets the fg3a of this PlayerMatchStats.


        :return: The fg3a of this PlayerMatchStats.
        :rtype: float
        """
        return self._fg3a

    @fg3a.setter
    def fg3a(self, fg3a: float):
        """Sets the fg3a of this PlayerMatchStats.


        :param fg3a: The fg3a of this PlayerMatchStats.
        :type fg3a: float
        """

        self._fg3a = fg3a

    @property
    def fg3_pct(self) -> float:
        """Gets the fg3_pct of this PlayerMatchStats.


        :return: The fg3_pct of this PlayerMatchStats.
        :rtype: float
        """
        return self._fg3_pct

    @fg3_pct.setter
    def fg3_pct(self, fg3_pct: float):
        """Sets the fg3_pct of this PlayerMatchStats.


        :param fg3_pct: The fg3_pct of this PlayerMatchStats.
        :type fg3_pct: float
        """

        self._fg3_pct = fg3_pct

    @property
    def ftm(self) -> float:
        """Gets the ftm of this PlayerMatchStats.


        :return: The ftm of this PlayerMatchStats.
        :rtype: float
        """
        return self._ftm

    @ftm.setter
    def ftm(self, ftm: float):
        """Sets the ftm of this PlayerMatchStats.


        :param ftm: The ftm of this PlayerMatchStats.
        :type ftm: float
        """

        self._ftm = ftm

    @property
    def fta(self) -> float:
        """Gets the fta of this PlayerMatchStats.


        :return: The fta of this PlayerMatchStats.
        :rtype: float
        """
        return self._fta

    @fta.setter
    def fta(self, fta: float):
        """Sets the fta of this PlayerMatchStats.


        :param fta: The fta of this PlayerMatchStats.
        :type fta: float
        """

        self._fta = fta

    @property
    def ft_pct(self) -> float:
        """Gets the ft_pct of this PlayerMatchStats.


        :return: The ft_pct of this PlayerMatchStats.
        :rtype: float
        """
        return self._ft_pct

    @ft_pct.setter
    def ft_pct(self, ft_pct: float):
        """Sets the ft_pct of this PlayerMatchStats.


        :param ft_pct: The ft_pct of this PlayerMatchStats.
        :type ft_pct: float
        """

        self._ft_pct = ft_pct

    @property
    def oreb(self) -> float:
        """Gets the oreb of this PlayerMatchStats.


        :return: The oreb of this PlayerMatchStats.
        :rtype: float
        """
        return self._oreb

    @oreb.setter
    def oreb(self, oreb: float):
        """Sets the oreb of this PlayerMatchStats.


        :param oreb: The oreb of this PlayerMatchStats.
        :type oreb: float
        """

        self._oreb = oreb

    @property
    def dreb(self) -> float:
        """Gets the dreb of this PlayerMatchStats.


        :return: The dreb of this PlayerMatchStats.
        :rtype: float
        """
        return self._dreb

    @dreb.setter
    def dreb(self, dreb: float):
        """Sets the dreb of this PlayerMatchStats.


        :param dreb: The dreb of this PlayerMatchStats.
        :type dreb: float
        """

        self._dreb = dreb

    @property
    def reb(self) -> float:
        """Gets the reb of this PlayerMatchStats.


        :return: The reb of this PlayerMatchStats.
        :rtype: float
        """
        return self._reb

    @reb.setter
    def reb(self, reb: float):
        """Sets the reb of this PlayerMatchStats.


        :param reb: The reb of this PlayerMatchStats.
        :type reb: float
        """

        self._reb = reb

    @property
    def ast(self) -> float:
        """Gets the ast of this PlayerMatchStats.


        :return: The ast of this PlayerMatchStats.
        :rtype: float
        """
        return self._ast

    @ast.setter
    def ast(self, ast: float):
        """Sets the ast of this PlayerMatchStats.


        :param ast: The ast of this PlayerMatchStats.
        :type ast: float
        """

        self._ast = ast

    @property
    def stl(self) -> float:
        """Gets the stl of this PlayerMatchStats.


        :return: The stl of this PlayerMatchStats.
        :rtype: float
        """
        return self._stl

    @stl.setter
    def stl(self, stl: float):
        """Sets the stl of this PlayerMatchStats.


        :param stl: The stl of this PlayerMatchStats.
        :type stl: float
        """

        self._stl = stl

    @property
    def blk(self) -> float:
        """Gets the blk of this PlayerMatchStats.


        :return: The blk of this PlayerMatchStats.
        :rtype: float
        """
        return self._blk

    @blk.setter
    def blk(self, blk: float):
        """Sets the blk of this PlayerMatchStats.


        :param blk: The blk of this PlayerMatchStats.
        :type blk: float
        """

        self._blk = blk

    @property
    def tov(self) -> float:
        """Gets the tov of this PlayerMatchStats.


        :return: The tov of this PlayerMatchStats.
        :rtype: float
        """
        return self._tov

    @tov.setter
    def tov(self, tov: float):
        """Sets the tov of this PlayerMatchStats.


        :param tov: The tov of this PlayerMatchStats.
        :type tov: float
        """

        self._tov = tov

    @property
    def pf(self) -> float:
        """Gets the pf of this PlayerMatchStats.


        :return: The pf of this PlayerMatchStats.
        :rtype: float
        """
        return self._pf

    @pf.setter
    def pf(self, pf: float):
        """Sets the pf of this PlayerMatchStats.


        :param pf: The pf of this PlayerMatchStats.
        :type pf: float
        """

        self._pf = pf

    @property
    def pts(self) -> float:
        """Gets the pts of this PlayerMatchStats.


        :return: The pts of this PlayerMatchStats.
        :rtype: float
        """
        return self._pts

    @pts.setter
    def pts(self, pts: float):
        """Sets the pts of this PlayerMatchStats.


        :param pts: The pts of this PlayerMatchStats.
        :type pts: float
        """

        self._pts = pts

    @property
    def plus_minus(self) -> float:
        """Gets the plus_minus of this PlayerMatchStats.


        :return: The plus_minus of this PlayerMatchStats.
        :rtype: float
        """
        return self._plus_minus

    @plus_minus.setter
    def plus_minus(self, plus_minus: float):
        """Sets the plus_minus of this PlayerMatchStats.


        :param plus_minus: The plus_minus of this PlayerMatchStats.
        :type plus_minus: float
        """

        self._plus_minus = plus_minus

    @property
    def video_available(self) -> float:
        """Gets the video_available of this PlayerMatchStats.


        :return: The video_available of this PlayerMatchStats.
        :rtype: float
        """
        return self._video_available

    @video_available.setter
    def video_available(self, video_available: float):
        """Sets the video_available of this PlayerMatchStats.


        :param video_available: The video_available of this PlayerMatchStats.
        :type video_available: float
        """

        self._video_available = video_available
