# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Team(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, city_arena: str=None, coach: str=None, logo: str=None, roster: List[str]=None):  # noqa: E501
        """Team - a model defined in Swagger

        :param id: The id of this Team.  # noqa: E501
        :type id: int
        :param name: The name of this Team.  # noqa: E501
        :type name: str
        :param city_arena: The city_arena of this Team.  # noqa: E501
        :type city_arena: str
        :param coach: The coach of this Team.  # noqa: E501
        :type coach: str
        :param logo: The logo of this Team.  # noqa: E501
        :type logo: str
        :param roster: The roster of this Team.  # noqa: E501
        :type roster: List[str]
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'city_arena': str,
            'coach': str,
            'logo': str,
            'roster': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'city_arena': 'city_arena',
            'coach': 'coach',
            'logo': 'logo',
            'roster': 'roster'
        }
        self._id = id
        self._name = name
        self._city_arena = city_arena
        self._coach = coach
        self._logo = logo
        self._roster = roster

    @classmethod
    def from_dict(cls, dikt) -> 'Team':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Team of this Team.  # noqa: E501
        :rtype: Team
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Team.


        :return: The id of this Team.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Team.


        :param id: The id of this Team.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Team.


        :return: The name of this Team.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Team.


        :param name: The name of this Team.
        :type name: str
        """

        self._name = name

    @property
    def city_arena(self) -> str:
        """Gets the city_arena of this Team.


        :return: The city_arena of this Team.
        :rtype: str
        """
        return self._city_arena

    @city_arena.setter
    def city_arena(self, city_arena: str):
        """Sets the city_arena of this Team.


        :param city_arena: The city_arena of this Team.
        :type city_arena: str
        """

        self._city_arena = city_arena

    @property
    def coach(self) -> str:
        """Gets the coach of this Team.


        :return: The coach of this Team.
        :rtype: str
        """
        return self._coach

    @coach.setter
    def coach(self, coach: str):
        """Sets the coach of this Team.


        :param coach: The coach of this Team.
        :type coach: str
        """

        self._coach = coach

    @property
    def logo(self) -> str:
        """Gets the logo of this Team.


        :return: The logo of this Team.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo: str):
        """Sets the logo of this Team.


        :param logo: The logo of this Team.
        :type logo: str
        """

        self._logo = logo

    @property
    def roster(self) -> List[str]:
        """Gets the roster of this Team.


        :return: The roster of this Team.
        :rtype: List[str]
        """
        return self._roster

    @roster.setter
    def roster(self, roster: List[str]):
        """Sets the roster of this Team.


        :param roster: The roster of this Team.
        :type roster: List[str]
        """

        self._roster = roster
