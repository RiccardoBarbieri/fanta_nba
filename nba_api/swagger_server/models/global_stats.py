# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GlobalStats(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, game_id: str=None, game_date: date=None, match_up: str=None, winner: str=None, home_point: int=None, away_point: int=None):  # noqa: E501
        """GlobalStats - a model defined in Swagger

        :param game_id: The game_id of this GlobalStats.  # noqa: E501
        :type game_id: str
        :param game_date: The game_date of this GlobalStats.  # noqa: E501
        :type game_date: date
        :param match_up: The match_up of this GlobalStats.  # noqa: E501
        :type match_up: str
        :param winner: The winner of this GlobalStats.  # noqa: E501
        :type winner: str
        :param home_point: The home_point of this GlobalStats.  # noqa: E501
        :type home_point: int
        :param away_point: The away_point of this GlobalStats.  # noqa: E501
        :type away_point: int
        """
        self.swagger_types = {
            'game_id': str,
            'game_date': date,
            'match_up': str,
            'winner': str,
            'home_point': int,
            'away_point': int
        }

        self.attribute_map = {
            'game_id': 'game_id',
            'game_date': 'game_date',
            'match_up': 'match_up',
            'winner': 'winner',
            'home_point': 'home_point',
            'away_point': 'away_point'
        }
        self._game_id = game_id
        self._game_date = game_date
        self._match_up = match_up
        self._winner = winner
        self._home_point = home_point
        self._away_point = away_point

    @classmethod
    def from_dict(cls, dikt) -> 'GlobalStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GlobalStats of this GlobalStats.  # noqa: E501
        :rtype: GlobalStats
        """
        return util.deserialize_model(dikt, cls)

    @property
    def game_id(self) -> str:
        """Gets the game_id of this GlobalStats.


        :return: The game_id of this GlobalStats.
        :rtype: str
        """
        return self._game_id

    @game_id.setter
    def game_id(self, game_id: str):
        """Sets the game_id of this GlobalStats.


        :param game_id: The game_id of this GlobalStats.
        :type game_id: str
        """

        self._game_id = game_id

    @property
    def game_date(self) -> date:
        """Gets the game_date of this GlobalStats.


        :return: The game_date of this GlobalStats.
        :rtype: date
        """
        return self._game_date

    @game_date.setter
    def game_date(self, game_date: date):
        """Sets the game_date of this GlobalStats.


        :param game_date: The game_date of this GlobalStats.
        :type game_date: date
        """

        self._game_date = game_date

    @property
    def match_up(self) -> str:
        """Gets the match_up of this GlobalStats.


        :return: The match_up of this GlobalStats.
        :rtype: str
        """
        return self._match_up

    @match_up.setter
    def match_up(self, match_up: str):
        """Sets the match_up of this GlobalStats.


        :param match_up: The match_up of this GlobalStats.
        :type match_up: str
        """

        self._match_up = match_up

    @property
    def winner(self) -> str:
        """Gets the winner of this GlobalStats.


        :return: The winner of this GlobalStats.
        :rtype: str
        """
        return self._winner

    @winner.setter
    def winner(self, winner: str):
        """Sets the winner of this GlobalStats.


        :param winner: The winner of this GlobalStats.
        :type winner: str
        """

        self._winner = winner

    @property
    def home_point(self) -> int:
        """Gets the home_point of this GlobalStats.


        :return: The home_point of this GlobalStats.
        :rtype: int
        """
        return self._home_point

    @home_point.setter
    def home_point(self, home_point: int):
        """Sets the home_point of this GlobalStats.


        :param home_point: The home_point of this GlobalStats.
        :type home_point: int
        """

        self._home_point = home_point

    @property
    def away_point(self) -> int:
        """Gets the away_point of this GlobalStats.


        :return: The away_point of this GlobalStats.
        :rtype: int
        """
        return self._away_point

    @away_point.setter
    def away_point(self, away_point: int):
        """Sets the away_point of this GlobalStats.


        :param away_point: The away_point of this GlobalStats.
        :type away_point: int
        """

        self._away_point = away_point
