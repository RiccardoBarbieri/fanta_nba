# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.player_advanced_details import PlayerAdvancedDetails  # noqa: F401,E501
from swagger_server.models.team_base import TeamBase  # noqa: F401,E501
from swagger_server import util


class Player(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, team: TeamBase=None, role: str=None, jersey_number: int=None, age: int=None, height: str=None, weight: str=None, photo: str=None, advanced_details: PlayerAdvancedDetails=None):  # noqa: E501
        """Player - a model defined in Swagger

        :param id: The id of this Player.  # noqa: E501
        :type id: int
        :param name: The name of this Player.  # noqa: E501
        :type name: str
        :param team: The team of this Player.  # noqa: E501
        :type team: TeamBase
        :param role: The role of this Player.  # noqa: E501
        :type role: str
        :param jersey_number: The jersey_number of this Player.  # noqa: E501
        :type jersey_number: int
        :param age: The age of this Player.  # noqa: E501
        :type age: int
        :param height: The height of this Player.  # noqa: E501
        :type height: str
        :param weight: The weight of this Player.  # noqa: E501
        :type weight: str
        :param photo: The photo of this Player.  # noqa: E501
        :type photo: str
        :param advanced_details: The advanced_details of this Player.  # noqa: E501
        :type advanced_details: PlayerAdvancedDetails
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'team': TeamBase,
            'role': str,
            'jersey_number': int,
            'age': int,
            'height': str,
            'weight': str,
            'photo': str,
            'advanced_details': PlayerAdvancedDetails
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'team': 'team',
            'role': 'role',
            'jersey_number': 'jersey_number',
            'age': 'age',
            'height': 'height',
            'weight': 'weight',
            'photo': 'photo',
            'advanced_details': 'advanced_details'
        }
        self._id = id
        self._name = name
        self._team = team
        self._role = role
        self._jersey_number = jersey_number
        self._age = age
        self._height = height
        self._weight = weight
        self._photo = photo
        self._advanced_details = advanced_details

    @classmethod
    def from_dict(cls, dikt) -> 'Player':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Player of this Player.  # noqa: E501
        :rtype: Player
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Player.


        :return: The id of this Player.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Player.


        :param id: The id of this Player.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Player.


        :return: The name of this Player.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Player.


        :param name: The name of this Player.
        :type name: str
        """

        self._name = name

    @property
    def team(self) -> TeamBase:
        """Gets the team of this Player.


        :return: The team of this Player.
        :rtype: TeamBase
        """
        return self._team

    @team.setter
    def team(self, team: TeamBase):
        """Sets the team of this Player.


        :param team: The team of this Player.
        :type team: TeamBase
        """

        self._team = team

    @property
    def role(self) -> str:
        """Gets the role of this Player.


        :return: The role of this Player.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this Player.


        :param role: The role of this Player.
        :type role: str
        """

        self._role = role

    @property
    def jersey_number(self) -> int:
        """Gets the jersey_number of this Player.


        :return: The jersey_number of this Player.
        :rtype: int
        """
        return self._jersey_number

    @jersey_number.setter
    def jersey_number(self, jersey_number: int):
        """Sets the jersey_number of this Player.


        :param jersey_number: The jersey_number of this Player.
        :type jersey_number: int
        """

        self._jersey_number = jersey_number

    @property
    def age(self) -> int:
        """Gets the age of this Player.


        :return: The age of this Player.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age: int):
        """Sets the age of this Player.


        :param age: The age of this Player.
        :type age: int
        """

        self._age = age

    @property
    def height(self) -> str:
        """Gets the height of this Player.


        :return: The height of this Player.
        :rtype: str
        """
        return self._height

    @height.setter
    def height(self, height: str):
        """Sets the height of this Player.


        :param height: The height of this Player.
        :type height: str
        """

        self._height = height

    @property
    def weight(self) -> str:
        """Gets the weight of this Player.


        :return: The weight of this Player.
        :rtype: str
        """
        return self._weight

    @weight.setter
    def weight(self, weight: str):
        """Sets the weight of this Player.


        :param weight: The weight of this Player.
        :type weight: str
        """

        self._weight = weight

    @property
    def photo(self) -> str:
        """Gets the photo of this Player.


        :return: The photo of this Player.
        :rtype: str
        """
        return self._photo

    @photo.setter
    def photo(self, photo: str):
        """Sets the photo of this Player.


        :param photo: The photo of this Player.
        :type photo: str
        """

        self._photo = photo

    @property
    def advanced_details(self) -> PlayerAdvancedDetails:
        """Gets the advanced_details of this Player.


        :return: The advanced_details of this Player.
        :rtype: PlayerAdvancedDetails
        """
        return self._advanced_details

    @advanced_details.setter
    def advanced_details(self, advanced_details: PlayerAdvancedDetails):
        """Sets the advanced_details of this Player.


        :param advanced_details: The advanced_details of this Player.
        :type advanced_details: PlayerAdvancedDetails
        """

        self._advanced_details = advanced_details
