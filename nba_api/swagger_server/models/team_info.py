# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TeamInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, full_name: str=None, abbreviation: str=None, nickname: str=None, city: str=None, state: str=None, year_founded: int=None, arena: str=None):  # noqa: E501
        """TeamInfo - a model defined in Swagger

        :param id: The id of this TeamInfo.  # noqa: E501
        :type id: int
        :param full_name: The full_name of this TeamInfo.  # noqa: E501
        :type full_name: str
        :param abbreviation: The abbreviation of this TeamInfo.  # noqa: E501
        :type abbreviation: str
        :param nickname: The nickname of this TeamInfo.  # noqa: E501
        :type nickname: str
        :param city: The city of this TeamInfo.  # noqa: E501
        :type city: str
        :param state: The state of this TeamInfo.  # noqa: E501
        :type state: str
        :param year_founded: The year_founded of this TeamInfo.  # noqa: E501
        :type year_founded: int
        :param arena: The arena of this TeamInfo.  # noqa: E501
        :type arena: str
        """
        self.swagger_types = {
            'id': int,
            'full_name': str,
            'abbreviation': str,
            'nickname': str,
            'city': str,
            'state': str,
            'year_founded': int,
            'arena': str
        }

        self.attribute_map = {
            'id': 'id',
            'full_name': 'full_name',
            'abbreviation': 'abbreviation',
            'nickname': 'nickname',
            'city': 'city',
            'state': 'state',
            'year_founded': 'year_founded',
            'arena': 'arena'
        }
        self._id = id
        self._full_name = full_name
        self._abbreviation = abbreviation
        self._nickname = nickname
        self._city = city
        self._state = state
        self._year_founded = year_founded
        self._arena = arena

    @classmethod
    def from_dict(cls, dikt) -> 'TeamInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TeamInfo of this TeamInfo.  # noqa: E501
        :rtype: TeamInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this TeamInfo.


        :return: The id of this TeamInfo.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this TeamInfo.


        :param id: The id of this TeamInfo.
        :type id: int
        """

        self._id = id

    @property
    def full_name(self) -> str:
        """Gets the full_name of this TeamInfo.


        :return: The full_name of this TeamInfo.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name: str):
        """Sets the full_name of this TeamInfo.


        :param full_name: The full_name of this TeamInfo.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def abbreviation(self) -> str:
        """Gets the abbreviation of this TeamInfo.


        :return: The abbreviation of this TeamInfo.
        :rtype: str
        """
        return self._abbreviation

    @abbreviation.setter
    def abbreviation(self, abbreviation: str):
        """Sets the abbreviation of this TeamInfo.


        :param abbreviation: The abbreviation of this TeamInfo.
        :type abbreviation: str
        """

        self._abbreviation = abbreviation

    @property
    def nickname(self) -> str:
        """Gets the nickname of this TeamInfo.


        :return: The nickname of this TeamInfo.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname: str):
        """Sets the nickname of this TeamInfo.


        :param nickname: The nickname of this TeamInfo.
        :type nickname: str
        """

        self._nickname = nickname

    @property
    def city(self) -> str:
        """Gets the city of this TeamInfo.


        :return: The city of this TeamInfo.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this TeamInfo.


        :param city: The city of this TeamInfo.
        :type city: str
        """

        self._city = city

    @property
    def state(self) -> str:
        """Gets the state of this TeamInfo.


        :return: The state of this TeamInfo.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """Sets the state of this TeamInfo.


        :param state: The state of this TeamInfo.
        :type state: str
        """

        self._state = state

    @property
    def year_founded(self) -> int:
        """Gets the year_founded of this TeamInfo.


        :return: The year_founded of this TeamInfo.
        :rtype: int
        """
        return self._year_founded

    @year_founded.setter
    def year_founded(self, year_founded: int):
        """Sets the year_founded of this TeamInfo.


        :param year_founded: The year_founded of this TeamInfo.
        :type year_founded: int
        """

        self._year_founded = year_founded

    @property
    def arena(self) -> str:
        """Gets the arena of this TeamInfo.


        :return: The arena of this TeamInfo.
        :rtype: str
        """
        return self._arena

    @arena.setter
    def arena(self, arena: str):
        """Sets the arena of this TeamInfo.


        :param arena: The arena of this TeamInfo.
        :type arena: str
        """

        self._arena = arena
