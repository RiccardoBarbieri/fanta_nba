# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TeamAdvancedDetailedStatisticsStatisticsPoints(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, total: int=None, average: float=None):  # noqa: E501
        """TeamAdvancedDetailedStatisticsStatisticsPoints - a model defined in Swagger

        :param total: The total of this TeamAdvancedDetailedStatisticsStatisticsPoints.  # noqa: E501
        :type total: int
        :param average: The average of this TeamAdvancedDetailedStatisticsStatisticsPoints.  # noqa: E501
        :type average: float
        """
        self.swagger_types = {
            'total': int,
            'average': float
        }

        self.attribute_map = {
            'total': 'total',
            'average': 'average'
        }
        self._total = total
        self._average = average

    @classmethod
    def from_dict(cls, dikt) -> 'TeamAdvancedDetailedStatisticsStatisticsPoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TeamAdvancedDetailedStatistics_statistics_points of this TeamAdvancedDetailedStatisticsStatisticsPoints.  # noqa: E501
        :rtype: TeamAdvancedDetailedStatisticsStatisticsPoints
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self) -> int:
        """Gets the total of this TeamAdvancedDetailedStatisticsStatisticsPoints.


        :return: The total of this TeamAdvancedDetailedStatisticsStatisticsPoints.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this TeamAdvancedDetailedStatisticsStatisticsPoints.


        :param total: The total of this TeamAdvancedDetailedStatisticsStatisticsPoints.
        :type total: int
        """

        self._total = total

    @property
    def average(self) -> float:
        """Gets the average of this TeamAdvancedDetailedStatisticsStatisticsPoints.


        :return: The average of this TeamAdvancedDetailedStatisticsStatisticsPoints.
        :rtype: float
        """
        return self._average

    @average.setter
    def average(self, average: float):
        """Sets the average of this TeamAdvancedDetailedStatisticsStatisticsPoints.


        :param average: The average of this TeamAdvancedDetailedStatisticsStatisticsPoints.
        :type average: float
        """

        self._average = average
