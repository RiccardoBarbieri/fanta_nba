# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PlayerAdvancedDetailsStatistics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, points: float=None, rebounds: float=None, assists: float=None, blocks: float=None, steals: float=None, turnovers: float=None, field_goal_percentage: float=None, three_point_percentage: float=None, free_throw_percentage: float=None):  # noqa: E501
        """PlayerAdvancedDetailsStatistics - a model defined in Swagger

        :param points: The points of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type points: float
        :param rebounds: The rebounds of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type rebounds: float
        :param assists: The assists of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type assists: float
        :param blocks: The blocks of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type blocks: float
        :param steals: The steals of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type steals: float
        :param turnovers: The turnovers of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type turnovers: float
        :param field_goal_percentage: The field_goal_percentage of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type field_goal_percentage: float
        :param three_point_percentage: The three_point_percentage of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type three_point_percentage: float
        :param free_throw_percentage: The free_throw_percentage of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :type free_throw_percentage: float
        """
        self.swagger_types = {
            'points': float,
            'rebounds': float,
            'assists': float,
            'blocks': float,
            'steals': float,
            'turnovers': float,
            'field_goal_percentage': float,
            'three_point_percentage': float,
            'free_throw_percentage': float
        }

        self.attribute_map = {
            'points': 'points',
            'rebounds': 'rebounds',
            'assists': 'assists',
            'blocks': 'blocks',
            'steals': 'steals',
            'turnovers': 'turnovers',
            'field_goal_percentage': 'field_goal_percentage',
            'three_point_percentage': 'three_point_percentage',
            'free_throw_percentage': 'free_throw_percentage'
        }
        self._points = points
        self._rebounds = rebounds
        self._assists = assists
        self._blocks = blocks
        self._steals = steals
        self._turnovers = turnovers
        self._field_goal_percentage = field_goal_percentage
        self._three_point_percentage = three_point_percentage
        self._free_throw_percentage = free_throw_percentage

    @classmethod
    def from_dict(cls, dikt) -> 'PlayerAdvancedDetailsStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PlayerAdvancedDetails_statistics of this PlayerAdvancedDetailsStatistics.  # noqa: E501
        :rtype: PlayerAdvancedDetailsStatistics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def points(self) -> float:
        """Gets the points of this PlayerAdvancedDetailsStatistics.


        :return: The points of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._points

    @points.setter
    def points(self, points: float):
        """Sets the points of this PlayerAdvancedDetailsStatistics.


        :param points: The points of this PlayerAdvancedDetailsStatistics.
        :type points: float
        """

        self._points = points

    @property
    def rebounds(self) -> float:
        """Gets the rebounds of this PlayerAdvancedDetailsStatistics.


        :return: The rebounds of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._rebounds

    @rebounds.setter
    def rebounds(self, rebounds: float):
        """Sets the rebounds of this PlayerAdvancedDetailsStatistics.


        :param rebounds: The rebounds of this PlayerAdvancedDetailsStatistics.
        :type rebounds: float
        """

        self._rebounds = rebounds

    @property
    def assists(self) -> float:
        """Gets the assists of this PlayerAdvancedDetailsStatistics.


        :return: The assists of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._assists

    @assists.setter
    def assists(self, assists: float):
        """Sets the assists of this PlayerAdvancedDetailsStatistics.


        :param assists: The assists of this PlayerAdvancedDetailsStatistics.
        :type assists: float
        """

        self._assists = assists

    @property
    def blocks(self) -> float:
        """Gets the blocks of this PlayerAdvancedDetailsStatistics.


        :return: The blocks of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._blocks

    @blocks.setter
    def blocks(self, blocks: float):
        """Sets the blocks of this PlayerAdvancedDetailsStatistics.


        :param blocks: The blocks of this PlayerAdvancedDetailsStatistics.
        :type blocks: float
        """

        self._blocks = blocks

    @property
    def steals(self) -> float:
        """Gets the steals of this PlayerAdvancedDetailsStatistics.


        :return: The steals of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._steals

    @steals.setter
    def steals(self, steals: float):
        """Sets the steals of this PlayerAdvancedDetailsStatistics.


        :param steals: The steals of this PlayerAdvancedDetailsStatistics.
        :type steals: float
        """

        self._steals = steals

    @property
    def turnovers(self) -> float:
        """Gets the turnovers of this PlayerAdvancedDetailsStatistics.


        :return: The turnovers of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._turnovers

    @turnovers.setter
    def turnovers(self, turnovers: float):
        """Sets the turnovers of this PlayerAdvancedDetailsStatistics.


        :param turnovers: The turnovers of this PlayerAdvancedDetailsStatistics.
        :type turnovers: float
        """

        self._turnovers = turnovers

    @property
    def field_goal_percentage(self) -> float:
        """Gets the field_goal_percentage of this PlayerAdvancedDetailsStatistics.


        :return: The field_goal_percentage of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._field_goal_percentage

    @field_goal_percentage.setter
    def field_goal_percentage(self, field_goal_percentage: float):
        """Sets the field_goal_percentage of this PlayerAdvancedDetailsStatistics.


        :param field_goal_percentage: The field_goal_percentage of this PlayerAdvancedDetailsStatistics.
        :type field_goal_percentage: float
        """

        self._field_goal_percentage = field_goal_percentage

    @property
    def three_point_percentage(self) -> float:
        """Gets the three_point_percentage of this PlayerAdvancedDetailsStatistics.


        :return: The three_point_percentage of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._three_point_percentage

    @three_point_percentage.setter
    def three_point_percentage(self, three_point_percentage: float):
        """Sets the three_point_percentage of this PlayerAdvancedDetailsStatistics.


        :param three_point_percentage: The three_point_percentage of this PlayerAdvancedDetailsStatistics.
        :type three_point_percentage: float
        """

        self._three_point_percentage = three_point_percentage

    @property
    def free_throw_percentage(self) -> float:
        """Gets the free_throw_percentage of this PlayerAdvancedDetailsStatistics.


        :return: The free_throw_percentage of this PlayerAdvancedDetailsStatistics.
        :rtype: float
        """
        return self._free_throw_percentage

    @free_throw_percentage.setter
    def free_throw_percentage(self, free_throw_percentage: float):
        """Sets the free_throw_percentage of this PlayerAdvancedDetailsStatistics.


        :param free_throw_percentage: The free_throw_percentage of this PlayerAdvancedDetailsStatistics.
        :type free_throw_percentage: float
        """

        self._free_throw_percentage = free_throw_percentage
