/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id("java")
    id("org.springframework.boot") version "3.2.0"
    id("io.spring.dependency-management") version "1.1.4"
    id("com.bmuschko.docker-spring-boot-application") version "9.3.2"
    id("application")
}
val springCloudAzureVersion by extra("5.12.0")

group = "com.betapi"
version = "0.1.0"

java {
    sourceCompatibility = JavaVersion.VERSION_18
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation(libs.junit)

    // This dependency is used by the application.
    implementation(libs.guava)

    // Spring Boot

    implementation("org.springframework.boot:spring-boot-starter-web:3.3.0")
    implementation("org.springframework.boot:spring-boot-starter:3.3.0")
    implementation("com.azure.spring:spring-cloud-azure-starter-keyvault")

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // Logging
    implementation("org.apache.logging.log4j:log4j-core:2.23.1")
    implementation("org.slf4j:slf4j-api:2.0.13")

    // Json serialization and deserialization
    implementation("com.fasterxml.jackson.core:jackson-core:2.16.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.0")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.17.0")

    // Http client
    implementation("org.apache.httpcomponents.client5:httpclient5:5.3.1")
//    implementation("org.apache.httpcomponents.core5:httpcore5:5.2.4")

    // HTML parser
    implementation("org.jsoup:jsoup:1.17.2")

    // MongoDB
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb:3.3.0")


}

dependencyManagement {
    imports {
        mavenBom("com.azure.spring:spring-cloud-azure-dependencies:$springCloudAzureVersion")
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(18))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("com.betapi.App")
}
